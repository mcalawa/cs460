
@{
    ViewBag.Title = "Accessories";
}

@section Breadcrumbs {
    <a href="/accessories">Accessories</a> <span class="subVisibility">></span> <a href="/accessories/@ViewBag.Accessories">@ViewBag.Sub</a> <span class="productVisibility">></span> <a href="/accessories/@ViewBag.Accessories/@ViewBag.Id">@ViewBag.Product</a>
}
@model IEnumerable<HW6.Models.Product>
<h2>@ViewBag.Header</h2>

@if (ViewBag.Type != "Product")
{
    <p>@ViewBag.Matches</p>

    if (Model != null)
    {
        @section Products {
            <div class="products">
                @foreach (var item in Model)
                {
                    <div class="eachProduct">
                        @{
                            var base64 = Convert.ToBase64String(item.ProductProductPhotoes.FirstOrDefault().ProductPhoto.ThumbNailPhoto);
                            <a href="~/@Html.DisplayFor(ModelItem => item.ProductSubcategory.ProductCategory.Name).ToString().ToLower()/@Html.DisplayFor(ModelItem => item.ProductSubcategory.Name).ToString().Replace(" ", "-").ToLower()/@Html.DisplayFor(ModelItem => item.ProductModel.Name).ToString().Replace(" ", "-").Replace("/", "-").ToLower()"><img src="data:image/png;base64,@base64" /></a>
                        }
                        <a href="~/@Html.DisplayFor(ModelItem => item.ProductSubcategory.ProductCategory.Name).ToString().ToLower()/@Html.DisplayFor(ModelItem => item.ProductSubcategory.Name).ToString().Replace(" ", "-").ToLower()/@Html.DisplayFor(ModelItem => item.ProductModel.Name).ToString().Replace(" ", "-").Replace("/", "-").ToLower()"><h3>@Html.DisplayFor(ModelItem => item.Name).ToString()</h3></a>
                        <p>$@Html.DisplayFor(ModelItem => item.ListPrice).ToString()</p>
                    </div>
                }
            </div>
        }
    }
}

@if (ViewBag.Type == "Product")
{
    if(Model != null)
    {
        @section ProductView {
            <div class="productView">
               @{
                   var base64 = Convert.ToBase64String(@Model.FirstOrDefault().ProductProductPhotoes.FirstOrDefault().ProductPhoto.LargePhoto);
                   <img src="data:image/png;base64,@base64" />
                   <p class="price">$@Model.FirstOrDefault().ListPrice</p>
                   <p class="desc">@Model.FirstOrDefault().ProductModel.ProductModelProductDescriptionCultures.FirstOrDefault().ProductDescription.Description</p>
               }
            </div>
            <div class="reviews">
                <h3>Product Reviews</h3>
                @foreach (var item in Model)
                {
                    foreach (var subitem in item.ProductReviews)
                    {
                        <div class="reviewItem">
                            <p class="reviewHead">
                                <span class="reviewDate">@Html.DisplayFor(ModelItem => subitem.ReviewDate)</span><br />
                                <span class="rating">@Html.DisplayFor(ModelItem => subitem.Rating)</span><br />
                                <span class="reviewerName">@Html.DisplayFor(ModelItem => subitem.ReviewerName)</span>
                            </p>
                            <p class="reviewDesc">@Html.DisplayFor(ModelItem => subitem.Comments)</p>
                        </div>
                    }
                }

                <div class="leaveReview">
                    <form method="post" class="reviewForm">
                        Name <input type="text" id="reviewerName" name="ReviewerName" /><br />
                        E-mail <input type="email" id="reviewerEmail" name="EmailAddress" /><br />
                        Rating <input type="number" id="reviewRating" name="Rating" /><br />
                        Comments <textarea id="reviewComments" name="Comments"></textarea>

                        <input type="hidden" value="@Model.FirstOrDefault().ProductID" name="ProductID" /><input type="hidden" id="reviewDate" onload="setDate()" name="ReviewDate" /><input type="hidden" id="modifyDate" onload="setDate()" name="ModifiedDate" /><input type="hidden" value="@Model.FirstOrDefault()" name="Product" />

                        <input type="submit" id="submitButton" />
                    </form>
                </div>
            </div>
        }
    }
}

@section PageScripts {
    <script>
        function setDynamicElements() {
            var url = window.location.pathname.split("/");

            if (url.length <= 2) {
                $(".subVisibility").css("visibility", "hidden");
                $(".productVisibility").css("visibility", "hidden");
            }
            else if (url.length == 3) {
                $(".subVisibility").css("visibility", "visible");
                $(".productVisibility").css("visibility", "hidden");
            }
            else {
                $(".subVisibility").css("visibility", "visible");
                $(".productVisibility").css("visibility", "visible");
            }

            var today = new Date();
            var month = today.getMonth();
            month += 1;
            var dateToday = today.getFullYear().toString() + "-" + month.toString() + "-" + today.getDate().toString();
            console.log(dateToday);
            $("#reviewDate").val(dateToday);
            $("#modifyDate").val(dateToday);
            console.log($("#reviewDate").val());
        }
    </script>
}

